version: 0.2

phases:
  pre_build:
    commands:
      - echo "🔧 Installing Rust and musl target for static linking..."
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - source ~/.cargo/env
      - rustup target add x86_64-unknown-linux-musl
      - echo "📦 Installing musl development tools..."
      - yum update -y
      - yum install -y musl-devel musl-gcc
      - echo "✅ Dependencies installed"
      
  build:
    commands:
      - echo "🔨 Building Rust binary with musl for static linking..."
      - source ~/.cargo/env
      - cargo build --release --target x86_64-unknown-linux-musl
      - echo "📦 Creating Lambda deployment package..."
      - cp target/x86_64-unknown-linux-musl/release/dejafoo-proxy bootstrap
      - zip dejafoo-lambda.zip bootstrap
      - rm bootstrap
      - echo "✅ Build completed successfully"

  post_build:
    commands:
      - echo "🚀 Deploying Lambda function..."
      - echo "📦 Updating Lambda function with new code..."
      - |
        aws lambda update-function-code \
          --function-name dejafoo-proxy-prod \
          --zip-file fileb://dejafoo-lambda.zip
      - echo "⏳ Waiting for function update to complete..."
      - |
        aws lambda wait function-updated \
          --function-name dejafoo-proxy-prod
      - echo "✅ Lambda function updated successfully"
      - echo "📋 Getting function info..."
      - |
        aws lambda get-function \
          --function-name dejafoo-proxy-prod \
          --query 'Configuration.{FunctionName:FunctionName,Runtime:Runtime,LastModified:LastModified,FunctionUrl:FunctionUrl}' \
          > deployment-info.json
      - echo "✅ Deployment completed successfully"

artifacts:
  files:
    - dejafoo-lambda.zip
    - deployment-info.json
  name: dejafoo-deployment-$(date +%Y-%m-%d-%H-%M-%S)

cache:
  paths:
    - ~/.cargo/registry/**
    - ~/.cargo/git/**
    - target/**

env:
  variables:
    RUST_BACKTRACE: 1
