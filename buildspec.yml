version: 0.2

phases:
  pre_build:
    commands:
      - echo "ðŸ”§ Installing Rust..."
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - source ~/.cargo/env
      - rustup target add x86_64-unknown-linux-gnu
      - echo "ðŸ“¦ Installing cross-compilation dependencies..."
      - yum update -y
      - yum install -y gcc gcc-c++ make jq wget unzip
      - echo "ðŸ”§ Installing Terraform..."
      - wget https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip
      - unzip terraform_1.13.1_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - chmod +x /usr/local/bin/terraform
      - terraform version
      
  build:
    commands:
      - echo "ðŸ”¨ Building Rust binary for Lambda..."
      - source ~/.cargo/env
      - cargo build --release --target x86_64-unknown-linux-gnu
      - echo "ðŸ“¦ Creating Lambda deployment package..."
      - cp target/x86_64-unknown-linux-gnu/release/dejafoo-proxy bootstrap
      - zip dejafoo-lambda.zip bootstrap
      - rm bootstrap
      - echo "âœ… Build completed successfully"

  post_build:
    commands:
      - echo "ðŸš€ Deploying infrastructure with Terraform..."
      - echo "ðŸ”‘ Retrieving AWS credentials from Secrets Manager..."
      - |
        SECRETS=$(aws secretsmanager get-secret-value --secret-id $SECRETS_MANAGER_SECRET_NAME --query SecretString --output text)
        export AWS_ACCESS_KEY_ID=$(echo $SECRETS | jq -r '.aws_access_key_id')
        export AWS_SECRET_ACCESS_KEY=$(echo $SECRETS | jq -r '.aws_secret_key')
        export GITHUB_TOKEN=$(echo $SECRETS | jq -r '.github_token')
        export DOMAIN_NAME=$(echo $SECRETS | jq -r '.domain_name')
        echo "âœ… AWS credentials retrieved successfully"
      - cd infra
      - echo "ðŸ”§ Creating terraform.tfvars..."
      - |
        cat > terraform.tfvars << EOF
        environment = "prod"
        aws_region = "eu-west-3"
        github_token = "$GITHUB_TOKEN"
        github_repo_url = "https://github.com/camrail/dejafoo.git"
        domain_name = "$DOMAIN_NAME"
        lambda_zip_path = "../dejafoo-lambda.zip"
        EOF
      - terraform init
      - terraform plan
      - terraform apply -auto-approve
      - echo "ðŸ“‹ Getting deployment outputs..."
      - terraform output -json > deployment-outputs.json
      - echo "âœ… Deployment completed successfully"

artifacts:
  files:
    - dejafoo-lambda.zip
    - infra/deployment-outputs.json
  name: dejafoo-deployment-$(date +%Y-%m-%d-%H-%M-%S)

cache:
  paths:
    - ~/.cargo/registry/**
    - ~/.cargo/git/**
    - target/**

env:
  variables:
    RUST_BACKTRACE: 1
