version: 0.2

timeout-in-minutes: 20

phases:
  build:
    on-failure: ABORT
    commands:
      - echo "🔨 Building Rust binary using Lambda-compatible Docker image..."
      - docker build -f Dockerfile.lambda -t dejafoo-lambda-builder .
      - echo "📦 Extracting Lambda deployment package..."
      - docker create --name temp-container dejafoo-lambda-builder
      - docker cp temp-container:/workspace/dejafoo-lambda.zip ./dejafoo-lambda.zip
      - docker rm temp-container
      - echo "✅ Build completed successfully"

  post_build:
    commands:
      - echo "🚀 Deploying Lambda function..."
      - echo "📦 Updating Lambda function with new code..."
      - |
        aws lambda update-function-code \
          --function-name dejafoo-proxy-prod \
          --zip-file fileb://dejafoo-lambda.zip
      - echo "⏳ Waiting for function update to complete..."
      - |
        aws lambda wait function-updated \
          --function-name dejafoo-proxy-prod
      - echo "✅ Lambda function updated successfully"
      - echo "📋 Getting function info..."
      - |
        aws lambda get-function \
          --function-name dejafoo-proxy-prod \
          --query 'Configuration.{FunctionName:FunctionName,Runtime:Runtime,LastModified:LastModified,FunctionUrl:FunctionUrl}' \
          > deployment-info.json
      - echo "✅ Deployment completed successfully"

artifacts:
  files:
    - dejafoo-lambda.zip
    - deployment-info.json
  name: dejafoo-deployment-$(date +%Y-%m-%d-%H-%M-%S)

cache:
  paths:
    - ~/.cargo/registry/**
    - ~/.cargo/git/**
    - target/**

env:
  variables:
    RUST_BACKTRACE: 1
