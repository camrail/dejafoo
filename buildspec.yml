version: 0.2

timeout-in-minutes: 10

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "📦 Installing Node.js dependencies..."
      - npm install --production
      - echo "✅ Dependencies installed successfully"

  build:
    on-failure: ABORT
    commands:
      - echo "🔨 Building JavaScript Lambda deployment package..."
      - echo "📦 Creating deployment zip..."
      - zip -r dejafoo-lambda.zip index.js package.json node_modules/
      - echo "✅ Build completed successfully"

  post_build:
    commands:
      - echo "🚀 Deploying Lambda function..."
      - echo "🔧 Updating Lambda runtime to Node.js..."
      - |
        aws lambda update-function-configuration \
          --function-name dejafoo-proxy-prod \
          --runtime nodejs18.x \
          --handler index.handler
      - echo "📦 Updating Lambda function with new code..."
      - |
        aws lambda update-function-code \
          --function-name dejafoo-proxy-prod \
          --zip-file fileb://dejafoo-lambda.zip
      - echo "⏳ Waiting for function update to complete..."
      - |
        aws lambda wait function-updated \
          --function-name dejafoo-proxy-prod
      - echo "✅ Lambda function updated successfully"
      - echo "📋 Getting function info..."
      - |
        aws lambda get-function \
          --function-name dejafoo-proxy-prod \
          --query 'Configuration.{FunctionName:FunctionName,Runtime:Runtime,LastModified:LastModified,Handler:Handler}' \
          > deployment-info.json
      - echo "✅ Deployment completed successfully"

artifacts:
  files:
    - dejafoo-lambda.zip
    - deployment-info.json
  name: dejafoo-deployment-$(date +%Y-%m-%d-%H-%M-%S)

cache:
  paths:
    - node_modules/**
